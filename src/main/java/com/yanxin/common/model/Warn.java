package com.yanxin.common.model;


import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.jcbase.core.model.Condition;
import com.jcbase.core.model.Operators;
import com.jcbase.core.util.CommonUtils;
import com.jcbase.core.view.InvokeResult;
import com.jcbase.model.SysUser;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.yanxin.common.model.base.BaseOperationClass;
import com.yanxin.common.model.base.BaseWarn;

/**
 * Generated by JFinal.
 */
public class Warn extends BaseWarn<Warn> {

	private static final long serialVersionUID = -5833191302759104592L; 
	public static final Warn me = new Warn();
	
	public Page<Warn> getWarnPage(int page, int rows, String op_class, String station, String building, String sensor,Integer status,
			String orderbyStr) {
		StringBuffer sqlExceptSelect=new StringBuffer();
		
		if(status==2){
			if(station==null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND operation_class.id="+op_class);
			}else {
				if(building==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station);
				}else {
					if(sensor==null){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building);
					}else {
						String[] s=sensor.split("/");
						String sensorCodeString=s[0];
						String point_type=s[1];
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND warn.sensor_code='"+sensorCodeString+"' AND warn.point_type="+point_type);

					}
				}
			}
		}
		else{
			if(station==null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND operation_class.id="+op_class+" AND warn.status="+status);
			}else {
				if(building==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station+" AND warn.status="+status);
				}else {
					if(sensor==null){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building+" AND warn.status="+status);
					}else {
						String[] s=sensor.split("/");
						String sensorCodeString=s[0];
						String point_type=s[1];
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND warn.sensor_code='"+sensorCodeString+"' AND warn.point_type="+point_type+" AND warn.status="+status);
					}
				}
			}
		}
		if(orderbyStr!=""){
			sqlExceptSelect.append(orderbyStr);
		}else {
			sqlExceptSelect.append(" ORDER BY warn.create_time DESC");
		}
		String select="SELECT work_area.id as work_area_id,work_area.area, warn.*, CONCAT(`name`,platform_code) as sensorName,building.building_name,station.station_name,operation_class.op_name";
		//sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id");
		/*sqlExceptSelect.replace(313, 318, "and");*/
		return this.paginate(page, rows, select, sqlExceptSelect.toString());
	}
	/**
	 * sensor ID
	 * @param page
	 * @param rows
	 * @param op_class
	 * @param station
	 * @param building
	 * @param sensor
	 * @param status
	 * @param order
	 * @param orderbyStr
	 * @return
	 */
	public Page<Warn> getWarnPageMobile2(int page, int rows, String work_area_id,String op_class, String station, String building, int sensor,Integer status,String order,
			String orderbyStr) {
		StringBuffer sqlExceptSelect=new StringBuffer();

		if(status==2){ //返回全部告警，确认和未确认
			if(op_class == null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND work_area.id="+work_area_id);
			}else {
				if(station==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND operation_class.id="+op_class);
				}else {
					if(building==null){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station);
					}else {
						if(sensor==0){
							sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building);
						}else {
							/*String[] s=sensor.split("/");
							String sensorCodeString=s[0];
							String point_type=s[1];*/
							sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND sensor.id="+sensor);

						}
					}
				}
			}
			
			
		}else{
			if(op_class == null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND work_area.id="+work_area_id+" AND warn.status="+status);
			}else {
				if(station==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND operation_class.id="+op_class+" AND warn.status="+status);
				}else {
					if(building==null){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station+" AND warn.status="+status);
					}else {
						if(sensor==0){
							sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building+" AND warn.status="+status);
						}else {
							/*String[] s=sensor.split("/");
							String sensorCodeString=s[0];
							String point_type=s[1];*/
							sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND sensor.id="+sensor+" AND warn.status="+status);
						}
					}
				}
			}
			
		}
		if(order.equals("0")){//温度
			sqlExceptSelect.append(" ORDER BY warn.max_temp DESC");
		}else if(order.equals("1")){//时间
			sqlExceptSelect.append(" ORDER BY warn.create_time DESC");
		}
		String warnSql = " warn.id, IFNULL(warn.confirm_time,'') AS confirm_time,warn.cancel,IFNULL(warn.confirm_user,'') AS confirm_user,warn.create_time,IFNULL(warn.humidity,'') AS humidity,warn.id,warn.max_temp,warn.point_type,IFNULL(warn.reason,'') AS reason,IFNULL(warn.remark,'') AS remark,warn.sensor_code,warn.`status`,IFNULL(warn.suggestion,'') AS suggestion,IFNULL(warn.weather,'') AS weather,IFNULL(warn.weather_temp,'') AS weather_temp,IFNULL(warn.wind,'') AS wind,IFNULL(warn.current,'') AS current,IFNULL(warn.voltage,'') AS voltage,IFNULL(warn.detector,'') AS detector,IFNULL(warn.allow,'') AS allow,IFNULL(warn.image_num,'') AS image_num ";
		
		String select="SELECT work_area.id as work_area_id,work_area.area, CONCAT(`name`,platform_code) as sensorName,building.building_name,station.station_name,operation_class.op_name,platform_point.warn_temp,"+warnSql;
		//sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id");
		/*sqlExceptSelect.replace(313, 318, "and");*/
		return this.paginate(page, rows, select, sqlExceptSelect.toString());
	}
	
	/**
	 * sensor ID
	 * @param page
	 * @param rows
	 * @param op_class
	 * @param station
	 * @param building
	 * @param sensor
	 * @param status
	 * @param order
	 * @param orderbyStr
	 * @return
	 */
	public long getWarnNonConfirm(String op_class, String station, String building, int sensor,Integer status) {
		StringBuffer sqlExceptSelect=new StringBuffer();

		if(status==2){ //返回全部告警，确认和未确认
			if(station==null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND operation_class.id="+op_class);
			}else {
				if(building==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station);
				}else {
					if(sensor==0){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building);
					}else {
						/*String[] s=sensor.split("/");
						String sensorCodeString=s[0];
						String point_type=s[1];*/
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND sensor.id="+sensor);

					}
				}
			}
		}else{
			
			if(station==null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND operation_class.id="+op_class+" AND warn.status="+status);
			}else {
				if(building==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station+" AND warn.status="+status);
				}else {
					if(sensor==0){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building+" AND warn.status="+status);
					}else {
						/*String[] s=sensor.split("/");
						String sensorCodeString=s[0];
						String point_type=s[1];*/
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND sensor.id="+sensor+" AND warn.status="+status);
					}
				}
			}
		}
		//sqlExceptSelect.append(" group by warn.id");
		String select="SELECT count(1) ";
		long num = Db.queryNumber(select+sqlExceptSelect.toString()).longValue();
		//sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id");
		/*sqlExceptSelect.replace(313, 318, "and");*/
		return num;
	}
	
	public Page<Warn> getWarnPageMobile(int page, int rows, String op_class, String station, String building, String sensor,Integer status,String order,
			String orderbyStr) {
		StringBuffer sqlExceptSelect=new StringBuffer();

		if(status==2){ //返回全部告警，确认和未确认
			if(station==null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND operation_class.id="+op_class);
			}else {
				if(building==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station);
				}else {
					if(sensor==null){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building);
					}else {
						String[] s=sensor.split("/");
						String sensorCodeString=s[0];
						String point_type=s[1];
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id  AND warn.sensor_code='"+sensorCodeString+"' AND warn.point_type="+point_type);

					}
				}
			}
		}else{
			
			if(station==null){
				sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND operation_class.id="+op_class+" AND warn.status="+status);
			}else {
				if(building==null){
					sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND station.id="+station+" AND warn.status="+status);
				}else {
					if(sensor==null){
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND building.id="+building+" AND warn.status="+status);
					}else {
						String[] s=sensor.split("/");
						String sensorCodeString=s[0];
						String point_type=s[1];
						sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class,work_area WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND work_area.id=operation_class.work_area_id AND warn.sensor_code='"+sensorCodeString+"' AND warn.point_type="+point_type+" AND warn.status="+status);
					}
				}
			}
		}
		if(order.equals("0")){//温度
			sqlExceptSelect.append(" ORDER BY warn.max_temp DESC");
		}else if(order.equals("1")){//时间
			sqlExceptSelect.append(" ORDER BY warn.create_time DESC");
		}
		String warnSql = " warn.id, IFNULL(warn.confirm_time,'') AS confirm_time,warn.cancel,IFNULL(warn.confirm_user,'') AS confirm_user,warn.create_time,IFNULL(warn.humidity,'') AS humidity,warn.id,warn.max_temp,warn.point_type,IFNULL(warn.reason,'') AS reason,IFNULL(warn.remark,'') AS remark,warn.sensor_code,warn.`status`,IFNULL(warn.suggestion,'') AS suggestion,IFNULL(warn.weather,'') AS weather,IFNULL(warn.weather_temp,'') AS weather_temp,IFNULL(warn.wind,'') AS wind,IFNULL(warn.current,'') AS current,IFNULL(warn.voltage,'') AS voltage,IFNULL(warn.detector,'') AS detector,IFNULL(warn.allow,'') AS allow,IFNULL(warn.image_num,'') AS image_num ";
		String select="SELECT work_area.id as work_area_id,work_area.area, CONCAT(`name`,platform_code) as sensorName,building.building_name,station.station_name,operation_class.op_name,"+warnSql;
		//sqlExceptSelect.append("FROM warn,platform_point,building,sensor,station,operation_class WHERE warn.sensor_code=sensor.sensor_code AND warn.point_type=platform_point.point_type AND platform_point.pp_sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id");
		/*sqlExceptSelect.replace(313, 318, "and");*/
		return this.paginate(page, rows, select, sqlExceptSelect.toString());
	}
	
	
/*	public InvokeResult deleteData(Integer id) {
		this.deleteById(id);
		return InvokeResult.success();
	}*/
	
	//消除告警
	public InvokeResult setVisible(String idStrs, Integer visible) {
		List<Integer> ids=CommonUtils.getIntegerListByStrs(idStrs);
		Set<Condition> conditions=new HashSet<Condition>();
		conditions.add(new Condition("id",Operators.IN,ids));
		Map<String,Object> newValues=new HashMap<String,Object>();
		newValues.put("status", visible);
		this.update(conditions, newValues);
		
		for(Integer wid:ids){
			Warn w = Warn.me.findById(wid);
			if(null!=w){
				
				Temp.me.find("select * from temp where create_time=?",w.getCreateTime())
					.stream().forEach(x -> x.setStatus(visible).update());
				Images.me.find("select * from images where create_time=?",w.getCreateTime())
					.stream().forEach(x -> x.setStatus(visible).update());
				 List<Warnimages> wi = Warnimages.me.find("select * from warnimages where create_time=?",w.getCreateTime());
				 wi.stream().forEach(x -> x.setStatus(visible).update());
				 String sql = "SELECT * FROM temp WHERE status=0 AND temp_sensor_code=? AND point_type=? ORDER BY temp.create_time DESC";
				 Record r = Db.findFirst(sql,w.getSensorCode(),w.getPointType());
				 if(r!=null){						
						Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
								r.getDouble("max_temp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
					}else {
						Date time = new Date();
						Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
								0L,time,w.getSensorCode(),w.getPointType());
					}
				
			}
		}
		return InvokeResult.success();
	} 
	
	//消除告警-mobile
	public InvokeResult setVisibleWithName(String idStrs, String payload,Integer visible,String name,Date time) {
		List<Integer> ids=CommonUtils.getIntegerListByStrs(idStrs);
		Set<Condition> conditions=new HashSet<Condition>();
		conditions.add(new Condition("id",Operators.IN,ids));
		Map<String,Object> newValues=new HashMap<String,Object>();
		newValues.put("current", payload);
		newValues.put("status", visible);
		newValues.put("confirm_user", name);
		newValues.put("confirm_time", time);
		this.update(conditions, newValues);
		
		for(Integer wid:ids){
			Warn w = Warn.me.findById(wid);
			if(null!=w){
				Temp.me.find("select * from temp where create_time=? AND temp.point_type=? AND temp.temp_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode())
				.stream().forEach(x -> x.setStatus(visible).update());
				Images.me.find("select * from images where create_time=? AND images.point_type=? AND images.im_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode())
				.stream().forEach(x -> x.setStatus(visible).update());
				 List<Warnimages> wi = Warnimages.me.find("select * from warnimages where create_time=?  AND warnimages.point_type=? AND warnimages.im_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode());
				 wi.stream().forEach(x -> x.setStatus(visible).update());
				 
				 /*Record r = Db.findFirst("SELECT * FROM (SELECT MAX(temp.max_temp) maxTemp,temp_sensor_code,point_type FROM temp WHERE temp.status=0 GROUP BY temp_sensor_code,point_type) b WHERE temp_sensor_code=? AND point_type=?",
						 w.getSensorCode(),w.getPointType());
				 Record rr = Db.findFirst("SELECT * from warn where warn.status=0 order by create_time desc");
				
				if(r!=null && rr!=null){
					Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.update_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
							rr.getDouble("max_temp"),r.getDouble("maxTemp"),rr.get("create_time"),r.getStr("temp_sensor_code"),r.getStr("point_type"));
				}else {
					//SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.update_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
							0L,0L,time,r.getStr("temp_sensor_code"),r.getStr("point_type"));
				}*/
				String sql = "SELECT * FROM temp WHERE status=0 AND temp_sensor_code=? AND point_type=? ORDER BY temp.create_time DESC";
				Record r = Db.findFirst(sql,w.getSensorCode(),w.getPointType());
				if(r!=null){
						
					Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
							r.getDouble("max_temp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
				}else {
					Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
							0L,time,w.getSensorCode(),w.getPointType());
				}
			}
		}
		return InvokeResult.success("已确认");
	} 

	
	//消除全部告警--可用
	public InvokeResult setConfirmWarnWithName(String username, String name,String allowUser,Date time) {
		SysUser user = SysUser.me.getByName(username);
		String sqlstr = "select warn.* from warn where warn.status=0";
		if(user.getUserType()==0){// admin
			;
		}else if(user.getUserType()==1){// workarea
			
			sqlstr = "select warn.* from warn,sensor,building,station,operation_class where warn.status=0 AND warn.sensor_code=sensor.sensor_code AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id=operation_class.id AND operation_class.work_area_id="+user.getWork_area_id();
		}else if(user.getUserType()==2){//operation_class
			sqlstr = "SELECT warn.* from warn,sensor,building,station WHERE warn.sensor_code=sensor.sensor_code AND warn.status=0 AND sensor.building_id=building.id AND building.station_id=station.id AND station.op_id="+user.getOperation_class_id();
		}
		List<Warn> list = Warn.me.find(sqlstr);
		if(list!=null){
			list.stream().forEach(x -> {
				x.set("status",1).update();
			});
		}
		
		new Thread(new Runnable(){
			@Override
			public void run() {
				for(Warn w:list){
					if(null!=w){
						Temp.me.find("select * from temp where create_time=? AND temp.point_type=? AND temp.temp_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode())
							.stream().forEach(x -> x.setStatus(1).update());
						Images.me.find("select * from images where create_time=? AND images.point_type=? AND images.im_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode())
							.stream().forEach(x -> x.setStatus(1).update());
						 List<Warnimages> wi = Warnimages.me.find("select * from warnimages where create_time=?  AND warnimages.point_type=? AND warnimages.im_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode());
						 wi.stream().forEach(x -> x.setStatus(1).update());
						 
						/*Record r = Db.findFirst("SELECT * FROM (SELECT MAX(temp.max_temp) maxTemp,temp_sensor_code,point_type,temp.create_time FROM temp GROUP BY temp_sensor_code,point_type) b WHERE temp_sensor_code=? AND point_type=?",
								 w.getSensorCode(),w.getPointType());
						Record rr = Db.findFirst("SELECT MAX(warn.max_temp) AS maxTemp,warn.sensor_code,warn.point_type,warn.create_time from warn WHERE warn.point_type=? AND warn.sensor_code=? GROUP BY sensor_code,point_type",w.getPointType(),w.getSensorCode());

						if(rr!=null){
							
							Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
									r.getDouble("maxTemp"),rr.getDouble("maxTemp"),rr.get("create_time"),rr.getStr("sensor_code"),rr.getStr("point_type"));
						}else {
							//SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
							if(r!=null){
								Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
										r.getDouble("maxTemp"),r.getDouble("maxTemp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
							}else {
								Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
										0L,0L,time,w.getSensorCode(),w.getPointType());
							}
							
						}*/
						 
						String sql = "SELECT * FROM temp WHERE status=0 AND temp_sensor_code=? AND point_type=? ORDER BY temp.create_time DESC";
						Record r = Db.findFirst(sql,w.getSensorCode(),w.getPointType());
						
						if(r!=null){
							
							Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
									r.getDouble("max_temp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
						}else {
							Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
									0L,time,w.getSensorCode(),w.getPointType());
						}
					}
				}
			}
			
		}).start();;
		
		return InvokeResult.success("已确认");
	} 
	
	//消除告警-可用
	public InvokeResult setConfirmWarnWithName(String idStrs, Integer visible,String name,String allowUser,Date time) {
		List<Integer> ids=CommonUtils.getIntegerListByStrs(idStrs);
		Set<Condition> conditions=new HashSet<Condition>();
		conditions.add(new Condition("id",Operators.IN,ids));
		Map<String,Object> newValues=new HashMap<String,Object>();
		newValues.put("status", visible);
		newValues.put("confirm_user", name);
		newValues.put("allow", allowUser);
		newValues.put("confirm_time", time);
		this.update(conditions, newValues);
		new Thread(new Runnable(){
			@Override
			public void run() {
				for(Integer wid:ids){
					Warn w = Warn.me.findById(wid);
					//w.update(conditions, newValues);
					if(null!=w){
						Temp.me.find("select * from temp where create_time=? AND temp.point_type=? AND temp.temp_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode())
							.stream().forEach(x -> x.setStatus(visible).update());
						Images.me.find("select * from images where create_time=? AND images.point_type=? AND images.im_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode())
							.stream().forEach(x -> x.setStatus(visible).update());
						 List<Warnimages> wi = Warnimages.me.find("select * from warnimages where create_time=?  AND warnimages.point_type=? AND warnimages.im_sensor_code=?",w.getCreateTime(),w.getPointType(),w.getSensorCode());
						 wi.stream().forEach(x -> x.setStatus(visible).update());
						 
						/*Record r = Db.findFirst("SELECT * FROM (SELECT MAX(temp.max_temp) maxTemp,temp_sensor_code,point_type,temp.create_time FROM temp GROUP BY temp_sensor_code,point_type) b WHERE temp_sensor_code=? AND point_type=?",
								 w.getSensorCode(),w.getPointType());
						Record rr = Db.findFirst("SELECT MAX(warn.max_temp) AS maxTemp,warn.sensor_code,warn.point_type,warn.create_time from warn WHERE warn.point_type=? AND warn.sensor_code=? GROUP BY sensor_code,point_type",w.getPointType(),w.getSensorCode());
						
						if(rr!=null){
							
							Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
									r.getDouble("maxTemp"),rr.getDouble("maxTemp"),rr.get("create_time"),rr.getStr("sensor_code"),rr.getStr("point_type"));
						}else {
							if(r!=null){
								Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
										r.getDouble("maxTemp"),r.getDouble("maxTemp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
							}else {
								Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
										0L,0L,time,w.getSensorCode(),w.getPointType());
							}
							
						}*/
						 String sql = "SELECT * FROM temp WHERE status=0 AND temp_sensor_code=? AND point_type=? ORDER BY temp.create_time DESC";
						 Record r = Db.findFirst(sql,w.getSensorCode(),w.getPointType());
						 if(r!=null){
							
							Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
									r.getDouble("max_temp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
						}else {
							Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
									0L,time,w.getSensorCode(),w.getPointType());
						}
						 
					}
				}
			}
			
		}).start();;
		
		return InvokeResult.success("已确认");
	} 

	
	public InvokeResult deleteData(String bids) {
//			List<Integer> i=CommonUtils.getIntegerListByStrs(bids);
//			if(i.contains(1)){
//				return InvokeResult.failure(-2,"超级管理员不能被修改");
//			}
			List<Integer> ids=new ArrayList<Integer>();
			if(bids.contains(",")){
				
				for(String aid : bids.split(",")){
					if(StrKit.notBlank(aid)){
						ids.add(Integer.valueOf(aid));
					}
				}
			}else{
				if(StrKit.notBlank(bids)){
					ids.add(Integer.valueOf(bids));
				}
			}
			if(bids.length()>0){
				bids=bids.subSequence(0, bids.length()-1).toString();
			}
			for(int i=0;i<ids.size();i++) {
				Warn w = this.findById(ids.get(i));
				if(w != null){
					new Thread(new Runnable(){
						@Override
						public void run() {
							String sql = "DELETE from warnimages where im_sensor_code= ? AND point_type=? AND create_time=?";
							Db.update(sql,w.getSensorCode(),w.getPointType(),w.getCreateTime());
							String tempSql = "DELETE FROM temp WHERE temp.temp_sensor_code=? AND temp.point_type=? AND temp.create_time=?";
							Db.update(tempSql, w.getSensorCode(),w.getPointType(),w.getCreateTime());
							String imageSQL = "DELETE FROM images WHERE images.im_sensor_code=? AND images.point_type=? AND images.create_time=?";
							Db.update(imageSQL, w.getSensorCode(),w.getPointType(),w.getCreateTime());
							
							Record rr = Db.findFirst("SELECT MAX(warn.max_temp) AS maxTemp,warn.sensor_code,warn.point_type,warn.create_time from warn WHERE warn.point_type=? AND warn.sensor_code=? GROUP BY sensor_code,point_type",w.getPointType(),w.getSensorCode());
							Record r = Db.findFirst("SELECT * FROM (SELECT MAX(temp.max_temp) maxTemp,temp_sensor_code,point_type,temp.create_time FROM temp GROUP BY temp_sensor_code,point_type) b WHERE temp_sensor_code=? AND point_type=?",
									 w.getSensorCode(),w.getPointType());
							if(rr!=null){
								
								Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
										rr.getDouble("maxTemp"),r.getDouble("maxTemp"),r.get("create_time"),rr.getStr("sensor_code"),rr.getStr("point_type"));
							}else {
								
								//SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
								if(r!=null){
									Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
											r.getDouble("maxTemp"),r.getDouble("maxTemp"),r.get("create_time"),w.getSensorCode(),w.getPointType());
								}else {
									Db.update("update platform_point SET platform_point.max_temp=?,platform_point.history_max_temp=?,platform_point.history_time=? WHERE  platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
											0L,0L,new Date(),w.getSensorCode(),w.getPointType());
								}
								Record rrr = Db.findFirst("SELECT temp.max_temp,temp_sensor_code,point_type,temp.create_time FROM temp WHERE temp_sensor_code=? AND point_type=? ORDER BY temp.create_time DESC",
										 w.getSensorCode(),w.getPointType());
								if(rrr!=null){
									Db.update("update platform_point SET platform_point.current_temp=?,platform_point.create_time=? WHERE platform_point.pp_sensor_code=? AND platform_point.point_type= ?", 
											r.getDouble("max_temp"),rrr.get("create_time"),w.getSensorCode(),w.getPointType());
								}
							}
						}
					}).start();
				}
				
				this.deleteById(ids.get(i));
			}
			/*Set<Condition> conditions=new HashSet<Condition>();
			conditions.add(new Condition("id",Operators.IN,ids));*/
		/*	Map<String,Object> newValues=new HashMap<String,Object>();
			newValues.put("status", visible);*/
			
			return InvokeResult.success();
		} 
	
}
