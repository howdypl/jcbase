package com.yanxin.common.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.jcbase.core.model.Condition;
import com.jcbase.core.model.Operators;
import com.jcbase.core.util.CommonUtils;
import com.jcbase.core.view.InvokeResult;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.yanxin.common.model.base.BaseStation;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Station extends BaseStation<Station> {
	private static final long serialVersionUID = -4833292302759104592L;
	public static final Station me = new Station();
	
	public Page<Station> getStationPage(int page, int rows, String keyword,
			String orderbyStr) {
		Set<Condition> conditions=new HashSet<Condition>();
		List<Object> outConditionValues=new ArrayList<Object>();
		if(CommonUtils.isNotEmpty(keyword)){
			conditions.add(new Condition("station_name",Operators.LIKE,keyword));
		}
		String select="select su.*, (select group_concat(name) as userNames from sys_user where sys_user.id=su.station_manager) as userNames, (SELECT op_name FROM operation_class WHERE operation_class.id=su.op_id ) AS opName";
		StringBuffer sqlExceptSelect=new StringBuffer();
		sqlExceptSelect.append("from station su"+super.getWhereSql(conditions, outConditionValues));
		return this.paginate(page, rows, select, sqlExceptSelect.toString());
	}
	
	//变电站是否存在
		public boolean hasExist(String name){
			Set<Condition> conditions=new HashSet<Condition>();
			conditions.add(new Condition("station_name",Operators.EQ,name));
			long num=this.getCount(conditions);
			return num>0?true:false;
		}
		
		
		public InvokeResult save(Integer id, String station_name, String station_desc, String station_addr, Integer station_manager,Integer op_id) {
			// TODO Auto-generated method stub
			if(id!=null){
				Station station=this.findById(id);
				if(station_manager==0 || op_id==0) {
					station.set("station_name", station_name).set("station_desc",station_desc).set("station_addr",station_addr).update();
				}else {
					station.set("station_name", station_name).set("station_desc",station_desc).set("station_addr",station_addr).set("station_manager",station_manager).set("op_id",op_id).update();
				}
				int b=Db.update("update sys_user set station_id=(select id from station where station_manager=?) where id=?",station_manager,station_manager);
			}else {
				if(this.hasExist(station_name)){
					return InvokeResult.failure("变电站已存在");
				}else{
					new Station().set("station_name", station_name).set("station_desc",station_desc).set("station_addr",station_addr).set("station_manager",station_manager).set("op_id",op_id).set("create_time", new Date()).save();
					int b=Db.update("update sys_user set station_id=(select id from station where station_manager=?) where id=?",station_manager,station_manager);
				}
			}
			
			return InvokeResult.success();
		} 
		
		public InvokeResult deleteData(Integer id) {
			this.deleteById(id);
			return InvokeResult.success();
		}
}
