package com.yanxin.common.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.jcbase.core.model.Condition;
import com.jcbase.core.model.Operators;
import com.jcbase.core.util.CommonUtils;
import com.jcbase.core.view.InvokeResult;
import com.jfinal.plugin.activerecord.Page;
import com.yanxin.common.model.base.BaseWorkArea;

/**
 * Generated by Guozhen Cheng.
 */
@SuppressWarnings("serial")
public class WorkArea extends BaseWorkArea<WorkArea> {
	public static final WorkArea me = new WorkArea();
	
	public Page<WorkArea> getWorkAreaPage(int page, int rows, String keyword,
			String orderbyStr) {
		Set<Condition> conditions=new HashSet<Condition>();
		List<Object> outConditionValues=new ArrayList<Object>();
		if(CommonUtils.isNotEmpty(keyword)){
			conditions.add(new Condition("area",Operators.LIKE,keyword));
		}
		//String select="select su.*, (select group_concat(name) as opNames from sys_user where sys_user.id=su.op_manager) as opNames";
		String select="select su.*";
		StringBuffer sqlExceptSelect=new StringBuffer();
		sqlExceptSelect.append("from work_area su"+super.getWhereSql(conditions, outConditionValues));
		return this.paginate(page, rows, select, sqlExceptSelect.toString());
	}
	/**
	 * 工区用户获取其所在的工区信息
	 * @param username
	 * @return
	 */
	public List<WorkArea> getWorkAreaByUser(String username,int op){
		List<WorkArea> workareaList = new ArrayList<WorkArea>();
		String sqlString = "select * from work_area where id = (select work_area_id from sys_user where name='"+username+"')";
		
		workareaList = WorkArea.me.find(sqlString);
		
		return workareaList;
		
	}
	//用户名是否存在
	public boolean hasExist(String name){
		Set<Condition> conditions=new HashSet<Condition>();
		conditions.add(new Condition("area",Operators.EQ,name));
		long num=this.getCount(conditions);
		return num>0?true:false;
	}
	
	public InvokeResult save(Integer id, String area, String wa_desc, String wa_addr) {
		if(id!=null){
			WorkArea workarea=this.findById(id);
			/*if(op_manager==0) {
				opclass.set("op_name", op_name).set("op_desc",op_desc).set("op_addr",op_addr).update();
			}
			else {*/
			workarea.set("area", area).set("wa_desc",wa_desc).set("wa_addr",wa_addr).update();
			//}
			//int b=Db.update("update sys_user set operation_class_id=(select id from operation_class where op_manager=?) where id=?",op_manager,op_manager);
		}else {
			if(this.hasExist(area)){
				return InvokeResult.failure("工区已存在");
			}else{
				new WorkArea().set("area", area).set("wa_desc",wa_desc).set("wa_addr",wa_addr).set("create_time", new Date()).save();
				//int b=Db.update("update sys_user set operation_class_id=(select id from operation_class where op_manager=?) where id=?",op_manager,op_manager);
			}
		}
		
		return InvokeResult.success();
	} 
	
	public InvokeResult deleteData(Integer id) {
		this.deleteById(id);
		return InvokeResult.success();
	}
}
